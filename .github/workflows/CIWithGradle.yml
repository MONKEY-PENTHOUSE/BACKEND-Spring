name: CI with Gradle 
on: 
  push: 
    branches: [ main ] 
    
jobs: 
  build: 
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: monkpentdb_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
    
    steps: 
    - uses: actions/checkout@v2 
    - name: Set up JDK 11 
      uses: actions/setup-java@v2 
      with: 
        java-version: '11' 
        distribution: 'adopt' 
      
    - name: Grant execute permission for gradlew 
      run: chmod +x gradlew

    - name: cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
      
    - name: Build with Gradle 
      run: ./gradlew build
      
    - name: Docker build 
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: monkeypenthouse/api-server-spring
        tags: v1

      # Docker Hub에 새로운 Image가 push 완료되면 CodeDeploy Agent가 동작되도록 합니다.
      # --application-name과 --deployment-group-name은 아까 작성하신 애플리케이션 이름과 그룹 이름으로 대체하시면 됩니다.
      # [Your GitHub Repository] 예시) Woomin-Jeon/facebook-clone-server
      # "commitId=${GITHUB_SHA}" 코드가 자동으로 최신 commit을 불러옵니다.
    - name: Trigger the CodeDeploy in EC2 instance
      run: aws deploy --region ap-northeast-2 create-deployment --application-name Monkeypenthouse --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name codedeploy-group --github-location repository=MONKEY-PENTHOUSE/BACKEND-Spring,commitId=${GITHUB_SHA}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        Default_region_name: ap-northeast-2
